services:

  mariadb:
    container_name: mariadb
    image: mariadb
    build:
      context: "./requirements/mariadb"
      args:
        - MYSQL_HOST=${MYSQL_HOST}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    restart: always
    env_file:
      - .env
    volumes:
      - mariadb:/var/lib/mysql
    networks:
      - inception

  wordpress:
    container_name: wordpress
    image: wordpress
    build:
      context: "./requirements/wordpress"
      args:
        - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - WORDPRESS_TITLE=${WORDPRESS_TITLE}
        - WORDPRESS_URL=${WORDPRESS_URL}
        - LOGIN=${LOGIN}
        - WORDPRESS_EMAIL=${WORDPRESS_EMAIL}
        - WORDPRESS_ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
    volumes:
      - wordpress:/var/www/html
    depends_on:
      - mariadb
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - inception

  nginx:
    container_name: nginx
    image: nginx
    build:
      context: "./requirements/nginx"
    volumes:
      - wordpress:/var/www/html
    depends_on:
      - wordpress
    restart: always
    env_file:
      - .env
    ports:
      - "441:433" 
    networks:
      - inception

volumes:
  wordpress:
    name: wordpress
    driver: local
    driver_opts:
      device: ${VOLUME_DIR}/wordpress
      o: bind
      type: none
  mariadb:
    name: mariadb
    driver: local
    driver_opts:
      device: ${VOLUME_DIR}/mariadb
      o: bind
      type: none
networks:
    inception:
        driver: bridge
